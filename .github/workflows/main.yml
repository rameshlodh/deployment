name: Security and Build and Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  semgrep:
    name: Semgrep Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Semgrep using pip
        run: |
          pip install semgrep

      - name: Create artifact directory
        run: |
          mkdir -p artifact

      - name: Run Semgrep Security Audit
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_TOKEN }}
        run: |
          semgrep --config "p/security-audit" --output artifact/semgrep-security-audit-report.json
          
      - name: Run Semgrep Secrets Scan
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_TOKEN }}
        run: |
          semgrep --config "p/secrets" --output artifact/semgrep-secrets-scan-report.json
          
      - name: Run Semgrep CI Scan
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_TOKEN }}
        run: |
          semgrep --config "p/ci" --output artifact/semgrep-ci-scan-report.json

      - name: Upload Semgrep Reports as Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-reports
          path: artifact/*.json

  checkov:
    name: Checkov Security Scan
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Checkov
        run: |
          pip install checkov

      - name: Create artifact directory
        run: |
          mkdir -p artifact

      - name: Run Checkov on Infrastructure Code
        run: |
          checkov -d ./infra \
            --framework terraform,kubernetes,cloudformation \
            --output json \
            --output-file artifact/checkov-report.json \
            --skip-check BC.PipelineMissing

      - name: Upload Checkov Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: checkov-reports
          path: artifact/checkov-report.json

  docker-build-push:
    name: Docker Build and Push to Docker Hub
    runs-on: ubuntu-latest
    needs: [semgrep, checkov]  # Ensures this job runs after the security scans
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}  # Using the commit SHA as the image tag
          echo "Building Docker image for application: ${{ secrets.DOCKER_HUB_APPLICATION }} with tag: $IMAGE_TAG"
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_APPLICATION }}:$IMAGE_TAG .
          docker images  # Debugging: Ensure the image was built successfully

      - name: Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "Pushing Docker image for application: ${{ secrets.DOCKER_HUB_APPLICATION }} with tag: $IMAGE_TAG"
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_APPLICATION }}:$IMAGE_TAG

  trivy-scan:
    name: Trivy Docker Image Vulnerability Scan
    runs-on: ubuntu-latest
    needs: docker-build-push  # Runs after Docker image is built and pushed
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          curl -sfL https://github.com/aquasecurity/trivy/releases/download/v0.30.0/trivy_0.30.0_Linux-64bit.deb -o trivy.deb
          sudo dpkg -i trivy.deb

      - name: Create artifact directory
        run: |
          mkdir -p artifact

      - name: Run Trivy Scan on Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "Scanning Docker image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_APPLICATION }}:$IMAGE_TAG"
          trivy image --exit-code 1 --severity HIGH,CRITICAL ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_APPLICATION }}:$IMAGE_TAG > artifact/trivy-report.json

      - name: Upload Trivy Scan Report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-reports
          path: artifact/trivy-report.json
